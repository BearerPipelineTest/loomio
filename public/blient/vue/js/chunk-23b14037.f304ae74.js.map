{"version":3,"sources":["webpack:///./node_modules/turndown/lib/turndown.es.js"],"names":["extend","destination","i","arguments","length","source","key","hasOwnProperty","repeat","character","count","Array","join","blockElements","isBlock","node","is","voidElements","isVoid","hasVoid","has","meaningfulWhenBlankElements","isMeaningfulWhenBlank","hasMeaningfulWhenBlank","tagNames","indexOf","nodeName","getElementsByTagName","some","tagName","rules","cleanAttribute","attribute","replace","Rules","options","this","_keep","_remove","blankRule","replacement","blankReplacement","keepReplacement","defaultRule","defaultReplacement","array","push","findRule","rule","filterValue","filter","toLowerCase","isArray","TypeError","call","collapseWhitespace","element","isPre","firstChild","prevText","prevVoid","prev","next","nodeType","text","data","test","substr","remove","nextNode","nextSibling","parentNode","removeChild","current","paragraph","content","lineBreak","br","heading","hLevel","Number","charAt","headingStyle","underline","blockquote","list","parent","lastElementChild","listItem","prefix","bulletListMarker","start","getAttribute","index","prototype","children","indentedCodeBlock","codeBlockStyle","textContent","fencedCodeBlock","match","className","language","code","fenceChar","fence","fenceSize","fenceInCodeRegex","RegExp","exec","horizontalRule","hr","inlineLink","linkStyle","href","title","referenceLink","reference","linkReferenceStyle","id","references","append","emphasis","trim","emDelimiter","strong","strongDelimiter","hasSiblings","previousSibling","isCodeBlock","delimiter","leadingSpace","trailingSpace","matches","image","alt","src","titlePart","add","unshift","keep","forNode","isBlank","forEach","fn","root","window","canParseHTMLNatively","Parser","DOMParser","canParse","parseFromString","e","createHTMLParser","domino","string","createDocument","_htmlParser","HTMLParser","RootNode","input","doc","htmlParser","getElementById","cloneNode","Node","isCode","flankingWhitespace","leading","trailing","hasLeading","hasTrailing","blankWithSpaces","isFlankedByWhitespace","side","sibling","regExp","isFlanked","nodeValue","reduce","leadingNewLinesRegExp","trailingNewLinesRegExp","escapes","TurndownService","defaults","outerHTML","process","self","childNodes","output","escape","replacementForNode","postProcess","whitespace","separatingNewlines","newlines","sort","maxNewlines","string1","string2","separator","canConvert","turndown","use","plugin","addRule","accumulator"],"mappings":"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","file":"../../blient/vue/js/chunk-23b14037.f304ae74.js","sourcesContent":["function extend (destination) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) destination[key] = source[key];\n    }\n  }\n  return destination\n}\n\nfunction repeat (character, count) {\n  return Array(count + 1).join(character)\n}\n\nvar blockElements = [\n  'ADDRESS', 'ARTICLE', 'ASIDE', 'AUDIO', 'BLOCKQUOTE', 'BODY', 'CANVAS',\n  'CENTER', 'DD', 'DIR', 'DIV', 'DL', 'DT', 'FIELDSET', 'FIGCAPTION', 'FIGURE',\n  'FOOTER', 'FORM', 'FRAMESET', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'HEADER',\n  'HGROUP', 'HR', 'HTML', 'ISINDEX', 'LI', 'MAIN', 'MENU', 'NAV', 'NOFRAMES',\n  'NOSCRIPT', 'OL', 'OUTPUT', 'P', 'PRE', 'SECTION', 'TABLE', 'TBODY', 'TD',\n  'TFOOT', 'TH', 'THEAD', 'TR', 'UL'\n];\n\nfunction isBlock (node) {\n  return is(node, blockElements)\n}\n\nvar voidElements = [\n  'AREA', 'BASE', 'BR', 'COL', 'COMMAND', 'EMBED', 'HR', 'IMG', 'INPUT',\n  'KEYGEN', 'LINK', 'META', 'PARAM', 'SOURCE', 'TRACK', 'WBR'\n];\n\nfunction isVoid (node) {\n  return is(node, voidElements)\n}\n\nfunction hasVoid (node) {\n  return has(node, voidElements)\n}\n\nvar meaningfulWhenBlankElements = [\n  'A', 'TABLE', 'THEAD', 'TBODY', 'TFOOT', 'TH', 'TD', 'IFRAME', 'SCRIPT',\n  'AUDIO', 'VIDEO'\n];\n\nfunction isMeaningfulWhenBlank (node) {\n  return is(node, meaningfulWhenBlankElements)\n}\n\nfunction hasMeaningfulWhenBlank (node) {\n  return has(node, meaningfulWhenBlankElements)\n}\n\nfunction is (node, tagNames) {\n  return tagNames.indexOf(node.nodeName) >= 0\n}\n\nfunction has (node, tagNames) {\n  return (\n    node.getElementsByTagName &&\n    tagNames.some(function (tagName) {\n      return node.getElementsByTagName(tagName).length\n    })\n  )\n}\n\nvar rules = {};\n\nrules.paragraph = {\n  filter: 'p',\n\n  replacement: function (content) {\n    return '\\n\\n' + content + '\\n\\n'\n  }\n};\n\nrules.lineBreak = {\n  filter: 'br',\n\n  replacement: function (content, node, options) {\n    return options.br + '\\n'\n  }\n};\n\nrules.heading = {\n  filter: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\n\n  replacement: function (content, node, options) {\n    var hLevel = Number(node.nodeName.charAt(1));\n\n    if (options.headingStyle === 'setext' && hLevel < 3) {\n      var underline = repeat((hLevel === 1 ? '=' : '-'), content.length);\n      return (\n        '\\n\\n' + content + '\\n' + underline + '\\n\\n'\n      )\n    } else {\n      return '\\n\\n' + repeat('#', hLevel) + ' ' + content + '\\n\\n'\n    }\n  }\n};\n\nrules.blockquote = {\n  filter: 'blockquote',\n\n  replacement: function (content) {\n    content = content.replace(/^\\n+|\\n+$/g, '');\n    content = content.replace(/^/gm, '> ');\n    return '\\n\\n' + content + '\\n\\n'\n  }\n};\n\nrules.list = {\n  filter: ['ul', 'ol'],\n\n  replacement: function (content, node) {\n    var parent = node.parentNode;\n    if (parent.nodeName === 'LI' && parent.lastElementChild === node) {\n      return '\\n' + content\n    } else {\n      return '\\n\\n' + content + '\\n\\n'\n    }\n  }\n};\n\nrules.listItem = {\n  filter: 'li',\n\n  replacement: function (content, node, options) {\n    content = content\n      .replace(/^\\n+/, '') // remove leading newlines\n      .replace(/\\n+$/, '\\n') // replace trailing newlines with just a single one\n      .replace(/\\n/gm, '\\n    '); // indent\n    var prefix = options.bulletListMarker + '   ';\n    var parent = node.parentNode;\n    if (parent.nodeName === 'OL') {\n      var start = parent.getAttribute('start');\n      var index = Array.prototype.indexOf.call(parent.children, node);\n      prefix = (start ? Number(start) + index : index + 1) + '.  ';\n    }\n    return (\n      prefix + content + (node.nextSibling && !/\\n$/.test(content) ? '\\n' : '')\n    )\n  }\n};\n\nrules.indentedCodeBlock = {\n  filter: function (node, options) {\n    return (\n      options.codeBlockStyle === 'indented' &&\n      node.nodeName === 'PRE' &&\n      node.firstChild &&\n      node.firstChild.nodeName === 'CODE'\n    )\n  },\n\n  replacement: function (content, node, options) {\n    return (\n      '\\n\\n    ' +\n      node.firstChild.textContent.replace(/\\n/g, '\\n    ') +\n      '\\n\\n'\n    )\n  }\n};\n\nrules.fencedCodeBlock = {\n  filter: function (node, options) {\n    return (\n      options.codeBlockStyle === 'fenced' &&\n      node.nodeName === 'PRE' &&\n      node.firstChild &&\n      node.firstChild.nodeName === 'CODE'\n    )\n  },\n\n  replacement: function (content, node, options) {\n    var className = node.firstChild.getAttribute('class') || '';\n    var language = (className.match(/language-(\\S+)/) || [null, ''])[1];\n    var code = node.firstChild.textContent;\n\n    var fenceChar = options.fence.charAt(0);\n    var fenceSize = 3;\n    var fenceInCodeRegex = new RegExp('^' + fenceChar + '{3,}', 'gm');\n\n    var match;\n    while ((match = fenceInCodeRegex.exec(code))) {\n      if (match[0].length >= fenceSize) {\n        fenceSize = match[0].length + 1;\n      }\n    }\n\n    var fence = repeat(fenceChar, fenceSize);\n\n    return (\n      '\\n\\n' + fence + language + '\\n' +\n      code.replace(/\\n$/, '') +\n      '\\n' + fence + '\\n\\n'\n    )\n  }\n};\n\nrules.horizontalRule = {\n  filter: 'hr',\n\n  replacement: function (content, node, options) {\n    return '\\n\\n' + options.hr + '\\n\\n'\n  }\n};\n\nrules.inlineLink = {\n  filter: function (node, options) {\n    return (\n      options.linkStyle === 'inlined' &&\n      node.nodeName === 'A' &&\n      node.getAttribute('href')\n    )\n  },\n\n  replacement: function (content, node) {\n    var href = node.getAttribute('href');\n    var title = cleanAttribute(node.getAttribute('title'));\n    if (title) title = ' \"' + title + '\"';\n    return '[' + content + '](' + href + title + ')'\n  }\n};\n\nrules.referenceLink = {\n  filter: function (node, options) {\n    return (\n      options.linkStyle === 'referenced' &&\n      node.nodeName === 'A' &&\n      node.getAttribute('href')\n    )\n  },\n\n  replacement: function (content, node, options) {\n    var href = node.getAttribute('href');\n    var title = cleanAttribute(node.getAttribute('title'));\n    if (title) title = ' \"' + title + '\"';\n    var replacement;\n    var reference;\n\n    switch (options.linkReferenceStyle) {\n      case 'collapsed':\n        replacement = '[' + content + '][]';\n        reference = '[' + content + ']: ' + href + title;\n        break\n      case 'shortcut':\n        replacement = '[' + content + ']';\n        reference = '[' + content + ']: ' + href + title;\n        break\n      default:\n        var id = this.references.length + 1;\n        replacement = '[' + content + '][' + id + ']';\n        reference = '[' + id + ']: ' + href + title;\n    }\n\n    this.references.push(reference);\n    return replacement\n  },\n\n  references: [],\n\n  append: function (options) {\n    var references = '';\n    if (this.references.length) {\n      references = '\\n\\n' + this.references.join('\\n') + '\\n\\n';\n      this.references = []; // Reset references\n    }\n    return references\n  }\n};\n\nrules.emphasis = {\n  filter: ['em', 'i'],\n\n  replacement: function (content, node, options) {\n    if (!content.trim()) return ''\n    return options.emDelimiter + content + options.emDelimiter\n  }\n};\n\nrules.strong = {\n  filter: ['strong', 'b'],\n\n  replacement: function (content, node, options) {\n    if (!content.trim()) return ''\n    return options.strongDelimiter + content + options.strongDelimiter\n  }\n};\n\nrules.code = {\n  filter: function (node) {\n    var hasSiblings = node.previousSibling || node.nextSibling;\n    var isCodeBlock = node.parentNode.nodeName === 'PRE' && !hasSiblings;\n\n    return node.nodeName === 'CODE' && !isCodeBlock\n  },\n\n  replacement: function (content) {\n    if (!content.trim()) return ''\n\n    var delimiter = '`';\n    var leadingSpace = '';\n    var trailingSpace = '';\n    var matches = content.match(/`+/gm);\n    if (matches) {\n      if (/^`/.test(content)) leadingSpace = ' ';\n      if (/`$/.test(content)) trailingSpace = ' ';\n      while (matches.indexOf(delimiter) !== -1) delimiter = delimiter + '`';\n    }\n\n    return delimiter + leadingSpace + content + trailingSpace + delimiter\n  }\n};\n\nrules.image = {\n  filter: 'img',\n\n  replacement: function (content, node) {\n    var alt = cleanAttribute(node.getAttribute('alt'));\n    var src = node.getAttribute('src') || '';\n    var title = cleanAttribute(node.getAttribute('title'));\n    var titlePart = title ? ' \"' + title + '\"' : '';\n    return src ? '![' + alt + ']' + '(' + src + titlePart + ')' : ''\n  }\n};\n\nfunction cleanAttribute (attribute) {\n  return attribute ? attribute.replace(/(\\n+\\s*)+/g, '\\n') : ''\n}\n\n/**\n * Manages a collection of rules used to convert HTML to Markdown\n */\n\nfunction Rules (options) {\n  this.options = options;\n  this._keep = [];\n  this._remove = [];\n\n  this.blankRule = {\n    replacement: options.blankReplacement\n  };\n\n  this.keepReplacement = options.keepReplacement;\n\n  this.defaultRule = {\n    replacement: options.defaultReplacement\n  };\n\n  this.array = [];\n  for (var key in options.rules) this.array.push(options.rules[key]);\n}\n\nRules.prototype = {\n  add: function (key, rule) {\n    this.array.unshift(rule);\n  },\n\n  keep: function (filter) {\n    this._keep.unshift({\n      filter: filter,\n      replacement: this.keepReplacement\n    });\n  },\n\n  remove: function (filter) {\n    this._remove.unshift({\n      filter: filter,\n      replacement: function () {\n        return ''\n      }\n    });\n  },\n\n  forNode: function (node) {\n    if (node.isBlank) return this.blankRule\n    var rule;\n\n    if ((rule = findRule(this.array, node, this.options))) return rule\n    if ((rule = findRule(this._keep, node, this.options))) return rule\n    if ((rule = findRule(this._remove, node, this.options))) return rule\n\n    return this.defaultRule\n  },\n\n  forEach: function (fn) {\n    for (var i = 0; i < this.array.length; i++) fn(this.array[i], i);\n  }\n};\n\nfunction findRule (rules, node, options) {\n  for (var i = 0; i < rules.length; i++) {\n    var rule = rules[i];\n    if (filterValue(rule, node, options)) return rule\n  }\n  return void 0\n}\n\nfunction filterValue (rule, node, options) {\n  var filter = rule.filter;\n  if (typeof filter === 'string') {\n    if (filter === node.nodeName.toLowerCase()) return true\n  } else if (Array.isArray(filter)) {\n    if (filter.indexOf(node.nodeName.toLowerCase()) > -1) return true\n  } else if (typeof filter === 'function') {\n    if (filter.call(rule, node, options)) return true\n  } else {\n    throw new TypeError('`filter` needs to be a string, array, or function')\n  }\n}\n\n/**\n * The collapseWhitespace function is adapted from collapse-whitespace\n * by Luc Thevenard.\n *\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Luc Thevenard <lucthevenard@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * collapseWhitespace(options) removes extraneous whitespace from an the given element.\n *\n * @param {Object} options\n */\nfunction collapseWhitespace (options) {\n  var element = options.element;\n  var isBlock = options.isBlock;\n  var isVoid = options.isVoid;\n  var isPre = options.isPre || function (node) {\n    return node.nodeName === 'PRE'\n  };\n\n  if (!element.firstChild || isPre(element)) return\n\n  var prevText = null;\n  var prevVoid = false;\n\n  var prev = null;\n  var node = next(prev, element, isPre);\n\n  while (node !== element) {\n    if (node.nodeType === 3 || node.nodeType === 4) { // Node.TEXT_NODE or Node.CDATA_SECTION_NODE\n      var text = node.data.replace(/[ \\r\\n\\t]+/g, ' ');\n\n      if ((!prevText || / $/.test(prevText.data)) &&\n          !prevVoid && text[0] === ' ') {\n        text = text.substr(1);\n      }\n\n      // `text` might be empty at this point.\n      if (!text) {\n        node = remove(node);\n        continue\n      }\n\n      node.data = text;\n\n      prevText = node;\n    } else if (node.nodeType === 1) { // Node.ELEMENT_NODE\n      if (isBlock(node) || node.nodeName === 'BR') {\n        if (prevText) {\n          prevText.data = prevText.data.replace(/ $/, '');\n        }\n\n        prevText = null;\n        prevVoid = false;\n      } else if (isVoid(node)) {\n        // Avoid trimming space around non-block, non-BR void elements.\n        prevText = null;\n        prevVoid = true;\n      }\n    } else {\n      node = remove(node);\n      continue\n    }\n\n    var nextNode = next(prev, node, isPre);\n    prev = node;\n    node = nextNode;\n  }\n\n  if (prevText) {\n    prevText.data = prevText.data.replace(/ $/, '');\n    if (!prevText.data) {\n      remove(prevText);\n    }\n  }\n}\n\n/**\n * remove(node) removes the given node from the DOM and returns the\n * next node in the sequence.\n *\n * @param {Node} node\n * @return {Node} node\n */\nfunction remove (node) {\n  var next = node.nextSibling || node.parentNode;\n\n  node.parentNode.removeChild(node);\n\n  return next\n}\n\n/**\n * next(prev, current, isPre) returns the next node in the sequence, given the\n * current and previous nodes.\n *\n * @param {Node} prev\n * @param {Node} current\n * @param {Function} isPre\n * @return {Node}\n */\nfunction next (prev, current, isPre) {\n  if ((prev && prev.parentNode === current) || isPre(current)) {\n    return current.nextSibling || current.parentNode\n  }\n\n  return current.firstChild || current.nextSibling || current.parentNode\n}\n\n/*\n * Set up window for Node.js\n */\n\nvar root = (typeof window !== 'undefined' ? window : {});\n\n/*\n * Parsing HTML strings\n */\n\nfunction canParseHTMLNatively () {\n  var Parser = root.DOMParser;\n  var canParse = false;\n\n  // Adapted from https://gist.github.com/1129031\n  // Firefox/Opera/IE throw errors on unsupported types\n  try {\n    // WebKit returns null on unsupported types\n    if (new Parser().parseFromString('', 'text/html')) {\n      canParse = true;\n    }\n  } catch (e) {}\n\n  return canParse\n}\n\nfunction createHTMLParser () {\n  var Parser = function () {};\n\n  {\n    var domino = require('domino');\n    Parser.prototype.parseFromString = function (string) {\n      return domino.createDocument(string)\n    };\n  }\n  return Parser\n}\n\nvar HTMLParser = canParseHTMLNatively() ? root.DOMParser : createHTMLParser();\n\nfunction RootNode (input) {\n  var root;\n  if (typeof input === 'string') {\n    var doc = htmlParser().parseFromString(\n      // DOM parsers arrange elements in the <head> and <body>.\n      // Wrapping in a custom element ensures elements are reliably arranged in\n      // a single element.\n      '<x-turndown id=\"turndown-root\">' + input + '</x-turndown>',\n      'text/html'\n    );\n    root = doc.getElementById('turndown-root');\n  } else {\n    root = input.cloneNode(true);\n  }\n  collapseWhitespace({\n    element: root,\n    isBlock: isBlock,\n    isVoid: isVoid\n  });\n\n  return root\n}\n\nvar _htmlParser;\nfunction htmlParser () {\n  _htmlParser = _htmlParser || new HTMLParser();\n  return _htmlParser\n}\n\nfunction Node (node) {\n  node.isBlock = isBlock(node);\n  node.isCode = node.nodeName.toLowerCase() === 'code' || node.parentNode.isCode;\n  node.isBlank = isBlank(node);\n  node.flankingWhitespace = flankingWhitespace(node);\n  return node\n}\n\nfunction isBlank (node) {\n  return (\n    !isVoid(node) &&\n    !isMeaningfulWhenBlank(node) &&\n    /^\\s*$/i.test(node.textContent) &&\n    !hasVoid(node) &&\n    !hasMeaningfulWhenBlank(node)\n  )\n}\n\nfunction flankingWhitespace (node) {\n  var leading = '';\n  var trailing = '';\n\n  if (!node.isBlock) {\n    var hasLeading = /^\\s/.test(node.textContent);\n    var hasTrailing = /\\s$/.test(node.textContent);\n    var blankWithSpaces = node.isBlank && hasLeading && hasTrailing;\n\n    if (hasLeading && !isFlankedByWhitespace('left', node)) {\n      leading = ' ';\n    }\n\n    if (!blankWithSpaces && hasTrailing && !isFlankedByWhitespace('right', node)) {\n      trailing = ' ';\n    }\n  }\n\n  return { leading: leading, trailing: trailing }\n}\n\nfunction isFlankedByWhitespace (side, node) {\n  var sibling;\n  var regExp;\n  var isFlanked;\n\n  if (side === 'left') {\n    sibling = node.previousSibling;\n    regExp = / $/;\n  } else {\n    sibling = node.nextSibling;\n    regExp = /^ /;\n  }\n\n  if (sibling) {\n    if (sibling.nodeType === 3) {\n      isFlanked = regExp.test(sibling.nodeValue);\n    } else if (sibling.nodeType === 1 && !isBlock(sibling)) {\n      isFlanked = regExp.test(sibling.textContent);\n    }\n  }\n  return isFlanked\n}\n\nvar reduce = Array.prototype.reduce;\nvar leadingNewLinesRegExp = /^\\n*/;\nvar trailingNewLinesRegExp = /\\n*$/;\nvar escapes = [\n  [/\\\\/g, '\\\\\\\\'],\n  [/\\*/g, '\\\\*'],\n  [/^-/g, '\\\\-'],\n  [/^\\+ /g, '\\\\+ '],\n  [/^(=+)/g, '\\\\$1'],\n  [/^(#{1,6}) /g, '\\\\$1 '],\n  [/`/g, '\\\\`'],\n  [/^~~~/g, '\\\\~~~'],\n  [/\\[/g, '\\\\['],\n  [/\\]/g, '\\\\]'],\n  [/^>/g, '\\\\>'],\n  [/_/g, '\\\\_'],\n  [/^(\\d+)\\. /g, '$1\\\\. ']\n];\n\nfunction TurndownService (options) {\n  if (!(this instanceof TurndownService)) return new TurndownService(options)\n\n  var defaults = {\n    rules: rules,\n    headingStyle: 'setext',\n    hr: '* * *',\n    bulletListMarker: '*',\n    codeBlockStyle: 'indented',\n    fence: '```',\n    emDelimiter: '_',\n    strongDelimiter: '**',\n    linkStyle: 'inlined',\n    linkReferenceStyle: 'full',\n    br: '  ',\n    blankReplacement: function (content, node) {\n      return node.isBlock ? '\\n\\n' : ''\n    },\n    keepReplacement: function (content, node) {\n      return node.isBlock ? '\\n\\n' + node.outerHTML + '\\n\\n' : node.outerHTML\n    },\n    defaultReplacement: function (content, node) {\n      return node.isBlock ? '\\n\\n' + content + '\\n\\n' : content\n    }\n  };\n  this.options = extend({}, defaults, options);\n  this.rules = new Rules(this.options);\n}\n\nTurndownService.prototype = {\n  /**\n   * The entry point for converting a string or DOM node to Markdown\n   * @public\n   * @param {String|HTMLElement} input The string or DOM node to convert\n   * @returns A Markdown representation of the input\n   * @type String\n   */\n\n  turndown: function (input) {\n    if (!canConvert(input)) {\n      throw new TypeError(\n        input + ' is not a string, or an element/document/fragment node.'\n      )\n    }\n\n    if (input === '') return ''\n\n    var output = process.call(this, new RootNode(input));\n    return postProcess.call(this, output)\n  },\n\n  /**\n   * Add one or more plugins\n   * @public\n   * @param {Function|Array} plugin The plugin or array of plugins to add\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  use: function (plugin) {\n    if (Array.isArray(plugin)) {\n      for (var i = 0; i < plugin.length; i++) this.use(plugin[i]);\n    } else if (typeof plugin === 'function') {\n      plugin(this);\n    } else {\n      throw new TypeError('plugin must be a Function or an Array of Functions')\n    }\n    return this\n  },\n\n  /**\n   * Adds a rule\n   * @public\n   * @param {String} key The unique key of the rule\n   * @param {Object} rule The rule\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  addRule: function (key, rule) {\n    this.rules.add(key, rule);\n    return this\n  },\n\n  /**\n   * Keep a node (as HTML) that matches the filter\n   * @public\n   * @param {String|Array|Function} filter The unique key of the rule\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  keep: function (filter) {\n    this.rules.keep(filter);\n    return this\n  },\n\n  /**\n   * Remove a node that matches the filter\n   * @public\n   * @param {String|Array|Function} filter The unique key of the rule\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  remove: function (filter) {\n    this.rules.remove(filter);\n    return this\n  },\n\n  /**\n   * Escapes Markdown syntax\n   * @public\n   * @param {String} string The string to escape\n   * @returns A string with Markdown syntax escaped\n   * @type String\n   */\n\n  escape: function (string) {\n    return escapes.reduce(function (accumulator, escape) {\n      return accumulator.replace(escape[0], escape[1])\n    }, string)\n  }\n};\n\n/**\n * Reduces a DOM node down to its Markdown string equivalent\n * @private\n * @param {HTMLElement} parentNode The node to convert\n * @returns A Markdown representation of the node\n * @type String\n */\n\nfunction process (parentNode) {\n  var self = this;\n  return reduce.call(parentNode.childNodes, function (output, node) {\n    node = new Node(node);\n\n    var replacement = '';\n    if (node.nodeType === 3) {\n      replacement = node.isCode ? node.nodeValue : self.escape(node.nodeValue);\n    } else if (node.nodeType === 1) {\n      replacement = replacementForNode.call(self, node);\n    }\n\n    return join(output, replacement)\n  }, '')\n}\n\n/**\n * Appends strings as each rule requires and trims the output\n * @private\n * @param {String} output The conversion output\n * @returns A trimmed version of the ouput\n * @type String\n */\n\nfunction postProcess (output) {\n  var self = this;\n  this.rules.forEach(function (rule) {\n    if (typeof rule.append === 'function') {\n      output = join(output, rule.append(self.options));\n    }\n  });\n\n  return output.replace(/^[\\t\\r\\n]+/, '').replace(/[\\t\\r\\n\\s]+$/, '')\n}\n\n/**\n * Converts an element node to its Markdown equivalent\n * @private\n * @param {HTMLElement} node The node to convert\n * @returns A Markdown representation of the node\n * @type String\n */\n\nfunction replacementForNode (node) {\n  var rule = this.rules.forNode(node);\n  var content = process.call(this, node);\n  var whitespace = node.flankingWhitespace;\n  if (whitespace.leading || whitespace.trailing) content = content.trim();\n  return (\n    whitespace.leading +\n    rule.replacement(content, node, this.options) +\n    whitespace.trailing\n  )\n}\n\n/**\n * Determines the new lines between the current output and the replacement\n * @private\n * @param {String} output The current conversion output\n * @param {String} replacement The string to append to the output\n * @returns The whitespace to separate the current output and the replacement\n * @type String\n */\n\nfunction separatingNewlines (output, replacement) {\n  var newlines = [\n    output.match(trailingNewLinesRegExp)[0],\n    replacement.match(leadingNewLinesRegExp)[0]\n  ].sort();\n  var maxNewlines = newlines[newlines.length - 1];\n  return maxNewlines.length < 2 ? maxNewlines : '\\n\\n'\n}\n\nfunction join (string1, string2) {\n  var separator = separatingNewlines(string1, string2);\n\n  // Remove trailing/leading newlines and replace with separator\n  string1 = string1.replace(trailingNewLinesRegExp, '');\n  string2 = string2.replace(leadingNewLinesRegExp, '');\n\n  return string1 + separator + string2\n}\n\n/**\n * Determines whether an input can be converted\n * @private\n * @param {String|HTMLElement} input Describe this parameter\n * @returns Describe what it returns\n * @type String|Object|Array|Boolean|Number\n */\n\nfunction canConvert (input) {\n  return (\n    input != null && (\n      typeof input === 'string' ||\n      (input.nodeType && (\n        input.nodeType === 1 || input.nodeType === 9 || input.nodeType === 11\n      ))\n    )\n  )\n}\n\nexport default TurndownService;\n"],"sourceRoot":""}